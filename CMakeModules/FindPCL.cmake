# Try to find libpcl.
# http://www.vtk.org/Wiki/CMake:How_To_Find_Libraries
#
# Defines:
#   PCL_FOUND - system has libpcl
#   PCL_INCLUDE_DIRS - include dirs for pcl
#   PCL_LIBRARIES - library linker flags

INCLUDE( LibFindMacros )

# Dependencies
# libeigen3-dev, libflann-dev, libcminpack-dev, libvtk5-dev, libqhull-dev, openni-dev (>= 1.1.0.41-2), libusb-1.0-0-dev
LIBFIND_PACKAGE( PCL "Eigen3" )
LIBFIND_PACKAGE( PCL "Flann" )
LIBFIND_PACKAGE( PCL "Cminpack" )
LIBFIND_PACKAGE( PCL "VTK" )
LIBFIND_PACKAGE( PCL "Qhull" )
LIBFIND_PACKAGE( PCL "OpenNi" )

SET( PCL_INCLUDE_DIRS ${PCL_INCLUDE_DIRS} ${EIGEN3_INCLUDE_DIRS} )
SET( PCL_INCLUDE_DIRS ${PCL_INCLUDE_DIRS} ${FLANN_INCLUDE_DIRS} )
SET( PCL_INCLUDE_DIRS ${PCL_INCLUDE_DIRS} ${CMINPACK_INCLUDE_DIRS} )
# It seems like VTK has a butt-load of unecessary includes...what can you do?
SET( PCL_INCLUDE_DIRS ${PCL_INCLUDE_DIRS} ${VTK_INCLUDE_DIRS} )
SET( PCL_INCLUDE_DIRS ${PCL_INCLUDE_DIRS} ${QHULL_INCLUDE_DIRS} )
SET( PCL_INCLUDE_DIRS ${PCL_INCLUDE_DIRS} ${OPENNI_INCLUDE_DIRS} )

SET( PCL_LIBRARIES ${PCL_LIBRARIES} ${EIGEN3_LIBRARIES} )
SET( PCL_LIBRARIES ${PCL_LIBRARIES} ${FLANN_LIBRARIES} )
SET( PCL_LIBRARIES ${PCL_LIBRARIES} ${CMINPACK_LIBRARIES} )
SET( PCL_LIBRARIES ${PCL_LIBRARIES} ${VTK_LIBRARIES} )
SET( PCL_LIBRARIES ${PCL_LIBRARIES} ${QHULL_LIBRARIES} )
SET( PCL_LIBRARIES ${PCL_LIBRARIES} ${OPENNI_LIBRARIES} )

# Use pkg-config for hints.
# "pcl_common" "pcl_features" "pcl_filters" "pcl_io" "pcl_kdtree"
# "pcl_keypoints" "pcl_octree" "pcl_range_image_border_extractor"
# "pcl_range_image" "pcl_registration" "pcl_sample_consensus"
# "pcl_segmentation" "pcl_surface" "pcl_visualization"
LIBFIND_PKG_CHECK_MODULES( PCL_COMMON_PKGCONF "pcl_common" )
LIBFIND_PKG_CHECK_MODULES( PCL_FEATURES_PKGCONF "pcl_features" )
LIBFIND_PKG_CHECK_MODULES( PCL_FILTERS_PKGCONF "pcl_filters" )
LIBFIND_PKG_CHECK_MODULES( PCL_IO_PKGCONF "pcl_io" )
LIBFIND_PKG_CHECK_MODULES( PCL_KDTREE_PKGCONF "pcl_kdtree" )
LIBFIND_PKG_CHECK_MODULES( PCL_KEYPOINTS_PKGCONF "pcl_keypoints" )
LIBFIND_PKG_CHECK_MODULES( PCL_OCTREE_PKGCONF "pcl_octree" )
LIBFIND_PKG_CHECK_MODULES( PCL_RANGEIMAGEBORDEREXTRACTOR_PKGCONF "pcl_range_image_border_extractor" )
LIBFIND_PKG_CHECK_MODULES( PCL_RANGEIMAGE_PKGCONF "pcl_range_image" )
LIBFIND_PKG_CHECK_MODULES( PCL_REGISTRATION_PKGCONF "pcl_registration" )
LIBFIND_PKG_CHECK_MODULES( PCL_SAMPLECONSENSUS_PKGCONF "pcl_sample_consensus" )
LIBFIND_PKG_CHECK_MODULES( PCL_SEGMENTATION_PKGCONF "pcl_segmentation" )
LIBFIND_PKG_CHECK_MODULES( PCL_SURFACE_PKGCONF "pcl_surface" )
LIBFIND_PKG_CHECK_MODULES( PCL_VISUALIZATION_PKGCONF "pcl_visualization" )

# Include dir
FIND_PATH( PCL_INCLUDE_DIR
  NAMES "pcl/point_cloud.h"
  PATHS ${PCL_COMMON_PKGCONF_INCLUDE_DIRS}
)

# Libraries themselves
FIND_LIBRARY( PCL_COMMON_LIBRARY
  NAMES "pcl_common"
  PATHS ${PCL_COMMON_PKGCONF_LIBRARY_DIRS}
)

FIND_LIBRARY( PCL_FEATURES_LIBRARY
  NAMES "pcl_features"
  PATHS ${PCL_FEATURES_PKGCONF_LIBRARY_DIRS}
)

FIND_LIBRARY( PCL_FILTERS_LIBRARY
  NAMES "pcl_filters"
  PATHS ${PCL_FILTERS_PKGCONF_LIBRARY_DIRS}
)

FIND_LIBRARY( PCL_IO_LIBRARY
  NAMES "pcl_io"
  PATHS ${PCL_IO_PKGCONF_LIBRARY_DIRS}
)

FIND_LIBRARY( PCL_KDTREE_LIBRARY
  NAMES "pcl_kdtree"
  PATHS ${PCL_KDTREE_PKGCONF_LIBRARY_DIRS}
)

FIND_LIBRARY( PCL_KEYPOINTS_LIBRARY
  NAMES "pcl_keypoints"
  PATHS ${PCL_KEYPOINTS_PKGCONF_LIBRARY_DIRS}
)

FIND_LIBRARY( PCL_OCTREE_LIBRARY
  NAMES "pcl_octree"
  PATHS ${PCL_OCTREE_PKGCONF_LIBRARY_DIRS}
)

FIND_LIBRARY( PCL_RANGEIMAGEBORDEREXTRACTOR_LIBRARY
  NAMES "pcl_range_image_border_extractor"
  PATHS ${PCL_RANGEIMAGEBORDEREXTRACTOR_PKGCONF_LIBRARY_DIRS}
)

FIND_LIBRARY( PCL_RANGEIMAGE_LIBRARY
  NAMES "pcl_range_image"
  PATHS ${PCL_RANGEIMAGE_PKGCONF_LIBRARY_DIRS}
)

FIND_LIBRARY( PCL_REGISTRATION_LIBRARY
  NAMES "pcl_registration"
  PATHS ${PCL_REGISTRATION_PKGCONF_LIBRARY_DIRS}
)

FIND_LIBRARY( PCL_SAMPLECONSENSUS_LIBRARY
  NAMES "pcl_sample_consensus"
  PATHS ${PCL_SAMPLECONSENSUS_PKGCONF_LIBRARY_DIRS}
)

FIND_LIBRARY( PCL_SEGMENTATION_LIBRARY
  NAMES "pcl_segmentation"
  PATHS ${PCL_SEGMENTATION_PKGCONF_LIBRARY_DIRS}
)

FIND_LIBRARY( PCL_SURFACE_LIBRARY
  NAMES "pcl_surface"
  PATHS ${PCL_SURFACE_PKGCONF_LIBRARY_DIRS}
)

FIND_LIBRARY( PCL_VISUALIZATION_LIBRARY
  NAMES "pcl_visualization"
  PATHS ${PCL_VISUALIZATION_PKGCONF_LIBRARY_DIRS}
)

# Set variables so that LIBFIND_PROCESS() will set the final
# output variables.
SET( PCL_PROCESS_INCLUDES PCL_INCLUDE_DIR )
SET( PCL_PROCESS_LIBS PCL_COMMON_LIBRARY PCL_FEATURES_LIBRARY
     PCL_FILTERS_LIBRARY PCL_IO_LIBRARY PCL_KDTREE_LIBRARY
     PCL_KEYPOINTS_LIBRARY PCL_OCTREE_LIBRARY
     PCL_RANGEIMAGEBORDEREXTRACTOR_LIBRARY PCL_RANGEIMAGE_LIBRARY
     PCL_REGISTRATION_LIBRARY PCL_SAMPLECONSENSUS_LIBRARY
     PCL_SEGMENTATION_LIBRARY PCL_SURFACE_LIBRARY PCL_VISUALIZATION_LIBRARY
)
LIBFIND_PROCESS(PCL)